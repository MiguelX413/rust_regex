name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    strategy:
      matrix:
        include:
          - target: "x86_64-unknown-linux-gnu"
            pyversion: "3.7"
            args: "--release -o dist"
          - target: "x86_64-unknown-linux-gnu"
            pyversion: "pypy3.7"
            args: "-i pypy3.7 --release --no-sdist -o dist"
          - target: "x86_64-unknown-linux-gnu"
            pyversion: "pypy3.8"
            args: "-i pypy3.8 --release --no-sdist -o dist"
          - target: "x86_64-unknown-linux-gnu"
            pyversion: "pypy3.9"
            args: "-i pypy3.9 --release --no-sdist -o dist"
          - target: "x86_64-unknown-linux-musl"
            pyversion: "3.7"
            args: "--release --no-sdist -o dist"
          - target: "i686-unknown-linux-gnu"
            pyversion: "3.7"
            args: "--release --no-sdist -o dist"
          - target: "i686-unknown-linux-gnu"
            pyversion: "pypy3.7"
            args: "-i pypy3.7 --release --no-sdist -o dist"
          - target: "i686-unknown-linux-gnu"
            pyversion: "pypy3.8"
            args: "-i pypy3.8 --release --no-sdist -o dist"
          - target: "i686-unknown-linux-gnu"
            pyversion: "pypy3.9"
            args: "-i pypy3.9 --release --no-sdist -o dist"
          - target: "i686-unknown-linux-musl"
            pyversion: "3.7"
            args: "--release --no-sdist -o dist"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.pyversion }}
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: ${{ matrix.args }}
        target: ${{ matrix.target }}
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  linux-qemu:
    strategy:
      matrix:
        target: [aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl, armv7-unknown-linux-gnueabihf, armv7-unknown-linux-musleabihf, powerpc64-unknown-linux-gnu, powerpc64le-unknown-linux-gnu, s390x-unknown-linux-gnu]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --no-sdist -o dist
        target: ${{ matrix.target }}
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  windows:
    strategy:
      matrix:
        pyversion: ['3.7']
        arch: [x64, x86]
        args: ['--release --no-sdist -o dist']
        include:
          - pyversion: 'pypy3.7'
            arch: x64
            args: '-i pypy3 --release --no-sdist -o dist'
          - pyversion: 'pypy3.8'
            arch: x64
            args: '-i pypy3 --release --no-sdist -o dist'
          - pyversion: 'pypy3.9'
            arch: x64
            args: '-i pypy3 --release --no-sdist -o dist'
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.pyversion }}
        architecture: ${{ matrix.arch }}
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: ${{ matrix.args }}
        target: ${{ matrix.arch }}
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    strategy:
      matrix:
        include:
          - pyversion: "3.7"
            args: "--release --no-sdist -o dist --universal2"
          - pyversion: "pypy3.7"
            args: "-i pypy3.7 --release --no-sdist -o dist --universal2"
          - pyversion: "pypy3.8"
            args: "-i pypy3.8 --release --no-sdist -o dist --universal2"
          - pyversion: "pypy3.9"
            args: "-i pypy3.9 --release --no-sdist -o dist --universal2"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.pyversion }}
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: ${{ matrix.args }}
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, linux-qemu ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *